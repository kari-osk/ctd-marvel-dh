import type { GetServerSideProps, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import BodySingle from "dh-marvel/components/layouts/body/single/body-single";
import { generateAuthenticationString } from "dh-marvel/services/marvel/marvel-auth.service";
import { ICharacter } from "utils/types/comics.types";
import CardList from "dh-marvel/components/card";
import { Stack } from "@mui/material";
import {getComic} from "../services/marvel/marvel.service"
import { baseURL, hash, ts } from "dh-marvel/services/marvel/marvelApi.service";

interface IComic {
  id: number;
  title: string;
  description: string;
  thumbnail: {
    path: string;
    extension: string;
  };
}

interface IComicsProps {
  comics: IComic[];
  currentPage: number;
  totalPages: number;
  data: ICharacter[];
}

const itemsPerPage = 12;


const Index = ({comics} : IComicsProps) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Stack spacing={2}>
      <BodySingle title={"Destaque da semana"}>
          <CardList comics={comics} />
          </BodySingle>
      </Stack>
    </>
  );
};

export default Index;

export const getStaticProps: GetStaticProps = async () => {

  // const res = await api.get("comics");

  const res = await fetch(
    `${baseURL}/comics?ts=${ts}&apikey=${process.env.NEXT_PUBLIC_KEY}&hash=${hash}&limit=12&offset=12`
  );
  // const authString = await generateAuthenticationString();
  // const res = await fetch(authString)
  const data = await res.json();

  // console.log(data);

  const comics = data.data.results;

  // console.log(comics);

  return {
    props: { 
      comics
    },
  };


};

